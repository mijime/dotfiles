#!/usr/bin/env bash

set -euo pipefail

list_contests() {
  curl -sSL "https://atcoder.jp/contests" |
    go-queryh \
      -query "#contest-table-${contest_type} table > tbody > tr > td:nth-child(2) a" --attr href
}

download_contest() {
  if [[ ! -f "${base_dir}/contests/${contest}/tasks/index.html" ]]; then
    mkdir -p "${base_dir}/contests/${contest}/tasks"
    curl -sSL "https://atcoder.jp/contests/${contest}/tasks" -o "${base_dir}/contests/${contest}/tasks/index.html"
    echo "download https://atcoder.jp/contests/${contest}/tasks"
  else
    echo "already downloaded https://atcoder.jp/contests/${contest}/tasks"
  fi

  go-queryh \
    -query ".row table tbody tr td:nth-child(2)" \
    <"${base_dir}/contests/${contest}/tasks/index.html" |
    while read -r anchor; do
      href="$(echo "${anchor}" | go-queryh -query a -attr href)"
      download_contest_task "${base_dir}${href}" "https://atcoder.jp${href}"
    done
}

download_contest_task() {
  mkdir -p "${1}/test"
  if [[ ! -f "${1}/index.html" ]]; then
    curl -sSL "${2}" -o "${1}/index.html"
    echo "download $2"
  else
    echo "already downloaded $2"
  fi

  : >"${1}/question.txt"
  for no in $(seq 1 20); do
    section=$(
      go-queryh \
        -query "#task-statement .lang-ja .part:nth-child($no) section" \
        <"${1}/index.html"
    )
    title=$(echo "${section}" | go-queryh -query h3 -attr text)
    case ${title} in
    問題文* | 制約 | 入力)
      {
        echo "${section}" | html2text
        echo
      } >>"${1}/question.txt"
      ;;
    入力例\ *)
      echo "${section}" | go-queryh -query pre -attr text >"${1}/test/sample-${title#*\ }.in"
      ;;
    出力例\ *)
      echo "${section}" | go-queryh -query pre -attr text >"${1}/test/sample-${title#*\ }.out"
      ;;
    esac
  done
}

test_contents_task() {
  for no in $(seq 1 3); do
    if [[ ! -s "${1}/test/sample-${no}.in" ]] || [[ $(wc -l <"${1}/test/sample-${no}.in") -eq 0 ]]; then
      return
    fi

    if diff -ur <(${test_cmd[@]} <"${1}/test/sample-${no}.in") "${1}/test/sample-${no}.out"; then
      echo "succeed test/sample-${no}.in"
    else
      echo "failed test/sample-${no}.in"
    fi
  done
}

base_dir=${ATCODER_BASE_DIR:-~/src/atcoder.jp}
test_cmd=${ATCODER_TEST_CMD:-./a.out}
cmd=list
contest_type=recent
while [[ $# -gt 0 ]]; do
  case ${1} in
  -b | --base_dir)
    base_dir=${2}
    shift
    ;;
  -c | --contest)
    contest=${2}
    shift
    ;;
  --upcoming)
    contest_type=upcoming
    ;;
  -t | --test)
    test_cmd=(${2})
    shift
    ;;
  list | download | test)
    cmd=$1
    ;;
  *)
    echo "unsupported: $*" >&2
    exit 1
    ;;
  esac
  shift
done

case ${cmd} in
list)
  list_contests
  ;;
download)
  download_contest
  ;;
test)
  test_contents_task "$(pwd)"
  ;;
esac
